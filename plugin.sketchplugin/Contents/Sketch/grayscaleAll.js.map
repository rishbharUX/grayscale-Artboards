{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./src/grayscaleAll.js"],"names":["onRunAll","context","document","showMessage","doc","page","currentPage","artboards","grayedArtboards","alreadyGrayed","i","count","layerType","class","addGrayFlag","layers","j","name","isVisible","removeFromParent","artboard","objectAtIndex","artboardFrame","frame","artboardWidth","width","artboardHeight","height","rect","MSRectangleShape","alloc","init","setName","MSRect","rectWithRect","NSMakeRect","shapeGroup","MSShapeGroup","shapeWithPath","fill","style","addStylePartOfType","color","MSColor","colorWithRGBADictionary","r","g","b","a","contextSettings","setBlendMode","addLayers"],"mappings":";;;;;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;AClES,SAASA,QAAT,CAAkBC,OAAlB,EAA2B;AAIlCA,UAAQC,QAAR,CAAiBC,WAAjB,CAA6B,oBAA7B;AAID,MAAIC,MAAMH,QAAQC,QAAlB;AAEA,MAAIG,OAAOJ,QAAQC,QAAR,CAAiBI,WAAjB,EAAX;AACA,MAAIC,YAAYF,KAAKE,SAAL,EAAhB;AACD,MAAIC,kBAAiB,CAArB;AACA,MAAIC,gBAAgB,CAApB;AACCL,MAAID,WAAJ,CAAgB,4BAAhB;;AAIA,OAAK,IAAIO,IAAI,CAAb,EAAgBA,IAAIH,UAAUI,KAAV,EAApB,EAAuCD,GAAvC,EAA4C;AACvC,QAAIE,YAAYL,UAAUG,CAAV,EAAaG,KAAb,EAAhB;;AACA,QAAIN,UAAUG,CAAV,EAAaG,KAAb,MAAwB,iBAA5B,EAA+C;AACpD,UAAIC,cAAc,CAAlB;AACQ,UAAIC,SAASR,UAAUG,CAAV,EAAaK,MAAb,EAAb;;AACA,WAAK,IAAIC,IAAE,CAAX,EAAcA,IAAGD,OAAOJ,KAAP,EAAjB,EAAgCK,GAAhC,EAAqC;AAEpC,YAAID,OAAOC,CAAP,EAAUH,KAAV,MAAqB,cAArB,IAAuCE,OAAOC,CAAP,EAAUC,IAAV,MAAoB,oBAA/D,EACA;AACI,cAAGF,OAAOC,CAAP,EAAUE,SAAV,EAAH,EACE;AACEJ,0BAAa,CAAb;AACAL,4BAAgB,CAAhB;AACD,WAJH,MAKK,IAAG,CAACM,OAAOC,CAAP,EAAUE,SAAV,EAAJ,EACH;AACEH,mBAAOC,CAAP,EAAUG,gBAAV;AACD;AAEN;AAEF;;AAEG,UAAGL,eAAa,CAAhB,EACE;AAEA,YAAIM,WAAWb,UAAUc,aAAV,CAAwBX,CAAxB,CAAf;AACA,YAAIY,gBAAgBF,SAASG,KAAT,EAApB;AACA,YAAIC,gBAAgBF,cAAcG,KAAd,EAApB;AACA,YAAIC,iBAAiBJ,cAAcK,MAAd,EAArB;AAED,YAAIC,OAAOC,iBAAiBC,KAAjB,GAAyBC,IAAzB,EAAX;AACKH,aAAKI,OAAL,CAAa,oBAAb;AACAJ,aAAKL,KAAL,GAAaU,OAAOC,YAAP,CAAoBC,WAAW,CAAX,EAAa,CAAb,EAAeX,aAAf,EAA6BE,cAA7B,CAApB,CAAb;AACJ,YAAIU,aAAaC,aAAaC,aAAb,CAA2BV,IAA3B,CAAjB;AAEF,YAAIW,OAAOH,WAAWI,KAAX,GAAmBC,kBAAnB,CAAsC,CAAtC,CAAX;AACEF,aAAKG,KAAL,GAAaC,QAAQC,uBAAR,CAAgC;AAACC,aAAG,CAAJ;AAAOC,aAAG,CAAV;AAAaC,aAAG,CAAhB;AAAmBC,aAAG;AAAtB,SAAhC,CAAb;AAEAZ,mBAAWI,KAAX,GAAmBS,eAAnB,GAAqCC,YAArC,CAAkD,EAAlD;AACA9B,iBAAS+B,SAAT,CAAmB,CAACf,UAAD,CAAnB;AACA5B,2BAAmB,CAAnB;AAEC;AAEV,KA3CC,MA2CK;AACL;AACAJ,UAAID,WAAJ,CAAgB,4CAA0CS,SAA1C,GAAoD,GAApE;AACD;;AAED,QAAGJ,mBAAiB,CAApB,EACAJ,IAAID,WAAJ,CAAgBK,kBAAgB,2BAAhC,EADA,KAEK,IAAGA,mBAAiB,CAAjB,IAAsBC,gBAAc,CAAvC,EACLL,IAAID,WAAJ,CAAgB,kCAAhB;AACD;AACF;AAAA,C","file":"grayscaleAll.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/grayscaleAll.js\");\n","  \n  export function onRunAll(context) {\n\n\n\n  context.document.showMessage(\"All Running ðŸ™Œ wo!\");\n  \n\n\n var doc = context.document;\n \n var page = context.document.currentPage();\n var artboards = page.artboards();\nvar grayedArtboards =0; \nvar alreadyGrayed = 0;\n doc.showMessage(\"after page artboards lalal\");\n \n\n  \n for (var i = 0; i < artboards.count(); i++) {\n      var layerType = artboards[i].class();\n      if (artboards[i].class() == \"MSArtboardGroup\") {\n var addGrayFlag = 1;\n         var layers = artboards[i].layers();\n         for (var j=0; j< layers.count();j++) {\n           \n          if (layers[j].class() == \"MSShapeGroup\" && layers[j].name() == \"*grayscaleOverlay*\")\n          {\n              if(layers[j].isVisible())\n                {\n                  addGrayFlag =0;\n                  alreadyGrayed = 1;\n                }\n              else if(!layers[j].isVisible())\n                {\n                  layers[j].removeFromParent();\n                }\n\n          }\n\n        }\n            \n            if(addGrayFlag==1)       \n              {\n\n              var artboard = artboards.objectAtIndex(i);\n              var artboardFrame = artboard.frame();\n              var artboardWidth = artboardFrame.width();\n              var artboardHeight = artboardFrame.height();\n            \t \n            \tvar rect = MSRectangleShape.alloc().init();\n                  rect.setName(\"*grayscaleOverlay*\");\n                  rect.frame = MSRect.rectWithRect(NSMakeRect(0,0,artboardWidth,artboardHeight));\n              var shapeGroup = MSShapeGroup.shapeWithPath(rect);\n      \t\t\n      \t\t    var fill = shapeGroup.style().addStylePartOfType(0);\n              fill.color = MSColor.colorWithRGBADictionary({r: 1, g: 1, b: 1, a: 1});\n              \n              shapeGroup.style().contextSettings().setBlendMode(14);\n              artboard.addLayers([shapeGroup]);\n              grayedArtboards += 1;\n\n              }\n\n    } else {\n      //var layerType = selection[i].class();\n      doc.showMessage(\"That's not an Artboard. You selected a \"+layerType+\".\");\n    }\n\n    if(grayedArtboards!=0)\n    doc.showMessage(grayedArtboards+\" Artboards grayscaled! ðŸ˜Ž\");\n    else if(grayedArtboards==0 && alreadyGrayed>0)\n    doc.showMessage(\"Artboards already grayscaled. ðŸ˜‡\");  \n  }\n};\n\n\n  \t\n\n"],"sourceRoot":""}