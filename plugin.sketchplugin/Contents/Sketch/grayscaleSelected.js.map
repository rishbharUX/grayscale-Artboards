{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./src/grayscaleSelected.js"],"names":["onRunSelected","context","document","showMessage","doc","selection","grayedArtboards","alreadyGrayed","count","i","layerType","class","addGrayFlag","layers","j","name","isVisible","removeFromParent","artboard","objectAtIndex","artboardFrame","frame","artboardWidth","width","artboardHeight","height","rect","MSRectangleShape","alloc","init","setName","MSRect","rectWithRect","NSMakeRect","shapeGroup","MSShapeGroup","shapeWithPath","fill","style","addStylePartOfType","color","MSColor","colorWithRGBADictionary","r","g","b","a","contextSettings","setBlendMode","addLayers","substring","length"],"mappings":";;;;;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;AClES,SAASA,aAAT,CAAuBC,OAAvB,EAAgC;AAErCA,UAAQC,QAAR,CAAiBC,WAAjB,CAA6B,yBAA7B;AAED,MAAIC,MAAMH,QAAQC,QAAlB,CAJsC,CAIK;AAC5C;AACA;AAEA;AACA;;AAED,MAAIG,YAAYJ,QAAQI,SAAxB;AACA,MAAIC,kBAAkB,CAAtB;AACA,MAAIC,gBAAgB,CAApB;;AAEC,MAAIF,UAAUG,KAAV,MAAqB,CAAzB,EAA4B;AAC5BJ,QAAID,WAAJ,CAAgB,4BAAhB;AACD,GAFC,MAEK;AACH,SAAK,IAAIM,IAAI,CAAb,EAAgBA,IAAIJ,UAAUG,KAAV,EAApB,EAAuCC,GAAvC,EAA4C;AAC1C,UAAIC,YAAYL,UAAUI,CAAV,EAAaE,KAAb,EAAhB;;AACA,UAAIN,UAAUI,CAAV,EAAaE,KAAb,MAAwB,iBAA5B,EAA+C;AACnD,YAAIC,cAAc,CAAlB;AACM,YAAIC,SAASR,UAAUI,CAAV,EAAaI,MAAb,EAAb;;AACC,aAAK,IAAIC,IAAE,CAAX,EAAcA,IAAGD,OAAOL,KAAP,EAAjB,EAAgCM,GAAhC,EAAqC;AAEpC,cAAID,OAAOC,CAAP,EAAUH,KAAV,MAAqB,cAArB,IAAuCE,OAAOC,CAAP,EAAUC,IAAV,MAAoB,oBAA/D,EACA;AAEC,gBAAGF,OAAOC,CAAP,EAAUE,SAAV,EAAH,EACC;AACEJ,4BAAa,CAAb;AACAL,8BAAgB,CAAhB;AACH,aAJA,MAKG,IAAG,CAACM,OAAOC,CAAP,EAAUE,SAAV,EAAJ,EACJ;AACCH,qBAAOC,CAAP,EAAUG,gBAAV;AACA;AAEA;AAEF;;AAEG,YAAGL,eAAa,CAAhB,EACE;AACH,cAAIM,WAAWb,UAAUc,aAAV,CAAwBV,CAAxB,CAAf;AACA,cAAIW,gBAAgBF,SAASG,KAAT,EAApB;AACA,cAAIC,gBAAgBF,cAAcG,KAAd,EAApB;AACA,cAAIC,iBAAiBJ,cAAcK,MAAd,EAArB;AAED,cAAIC,OAAOC,iBAAiBC,KAAjB,GAAyBC,IAAzB,EAAX;AACKH,eAAKI,OAAL,CAAa,oBAAb;AACAJ,eAAKL,KAAL,GAAaU,OAAOC,YAAP,CAAoBC,WAAW,CAAX,EAAa,CAAb,EAAeX,aAAf,EAA6BE,cAA7B,CAApB,CAAb;AACJ,cAAIU,aAAaC,aAAaC,aAAb,CAA2BV,IAA3B,CAAjB;AAEN,cAAIW,OAAOH,WAAWI,KAAX,GAAmBC,kBAAnB,CAAsC,CAAtC,CAAX;AACMF,eAAKG,KAAL,GAAaC,QAAQC,uBAAR,CAAgC;AAACC,eAAG,CAAJ;AAAOC,eAAG,CAAV;AAAaC,eAAG,CAAhB;AAAmBC,eAAG;AAAtB,WAAhC,CAAb;AAEAZ,qBAAWI,KAAX,GAAmBS,eAAnB,GAAqCC,YAArC,CAAkD,EAAlD;AAGA9B,mBAAS+B,SAAT,CAAmB,CAACf,UAAD,CAAnB;AACA5B,6BAAmB,CAAnB;AACJ;AAGF,OA7CC,MA6CK;AACL;AACAF,YAAID,WAAJ,CAAgB,+CAA6CO,UAAUwC,SAAV,CAAoB,CAApB,EAAsBxC,UAAUyC,MAAhC,CAA7C,GAAqF,GAArG;AACD;AACF;;AACA,QAAG7C,mBAAiB,CAApB,EACCF,IAAID,WAAJ,CAAgBG,kBAAgB,2BAAhC,EADD,KAEM,IAAGA,mBAAiB,CAAjB,IAAsBC,gBAAc,CAAvC,EACLH,IAAID,WAAJ,CAAgB,kCAAhB;AACH;AACA;AAAA,C,CAGG;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;AACA;AAEA;AAEI;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAEN;AAEA,0C","file":"grayscaleSelected.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/grayscaleSelected.js\");\n","  \n  export function onRunSelected(context) {\n\n  \t\tcontext.document.showMessage(\"Selected Running ðŸ™Œ wo!\");\n  \n   var doc = context.document;                // the current document (MSDocument)\n  // var page = [doc currentPage];         // the current page (MSPage)\n  // var layers = [page children];\n\n  // for (var i=0; i<[layers count]; i++) {\n  //   var layer = layers[i];\n\n var selection = context.selection;\n var grayedArtboards = 0; \n var alreadyGrayed = 0;\n\n  if (selection.count() == 0) {\n  doc.showMessage(\"Please select an Artboard.\");\n} else {\n    for (var i = 0; i < selection.count(); i++) {\n      var layerType = selection[i].class();\n      if (selection[i].class() == \"MSArtboardGroup\") {\n  var addGrayFlag = 1;\n      \t var layers = selection[i].layers();\n         for (var j=0; j< layers.count();j++) {\n          \n          if (layers[j].class() == \"MSShapeGroup\" && layers[j].name() == \"*grayscaleOverlay*\")\n          {\n          \t\n          \tif(layers[j].isVisible())\n\t          \t{\n\t\t            addGrayFlag =0;\n\t\t            alreadyGrayed = 1;\n\t\t        }\n\t        else if(!layers[j].isVisible())\n\t\t        {\n\t\t        \tlayers[j].removeFromParent();\n\t\t        }\n\n          }\n\n        }\n            \n            if(addGrayFlag==1)    \n              {\n       \t\t\t\tvar artboard = selection.objectAtIndex(i);\n\t\t\t        var artboardFrame = artboard.frame();\n\t\t\t        var artboardWidth = artboardFrame.width();\n\t\t\t        var artboardHeight = artboardFrame.height();\n\t\t\t      \t \n\t\t\t      \tvar rect = MSRectangleShape.alloc().init();\n\t\t\t            rect.setName(\"*grayscaleOverlay*\");\n\t\t\t            rect.frame = MSRect.rectWithRect(NSMakeRect(0,0,artboardWidth,artboardHeight));\n\t\t\t        var shapeGroup = MSShapeGroup.shapeWithPath(rect);\n\t\t\t\t\t\n\t\t\t\t\tvar fill = shapeGroup.style().addStylePartOfType(0);\n\t\t\t        fill.color = MSColor.colorWithRGBADictionary({r: 1, g: 1, b: 1, a: 1});\n\t\t\t        \n\t\t\t        shapeGroup.style().contextSettings().setBlendMode(14);\n\n\t\t\t      \n\t\t\t        artboard.addLayers([shapeGroup]);\n\t\t\t        grayedArtboards += 1;\n    \t\t}\n\n\n    } else {\n      //var layerType = selection[i].class();\n      doc.showMessage(\"Please select an Artboard. You selected a \"+layerType.substring(2,layerType.length)+\".\");\n    }\n  }\n   if(grayedArtboards!=0)\n    doc.showMessage(grayedArtboards+\" Artboards grayscaled! ðŸ˜Ž\");\n    else if(grayedArtboards==0 && alreadyGrayed>0)\n    doc.showMessage(\"Artboards already grayscaled. ðŸ˜‡\");\n}\n};\n\n\n  \t\t// var artboard = context.selection.objectAtIndex(0);\n    //     var artboardFrame = artboard.frame();\n    //     var artboardWidth = artboardFrame.width();\n    //     var artboardHeight = artboardFrame.height();\n    //     // var artboardX = artboardFrame.x();\n    //     // var artboardY = artboardFrame.y();\n    //     //selection = selection.objectAtIndex(i);\n\n    //     var rect = MSRectangleShape.alloc().init();\n    //         rect.setName(\"Artboard Border\");\n    //         rect.frame = MSRect.rectWithRect(NSMakeRect(0,0,artboardWidth,artboardHeight));\n    //     var shapeGroup = MSShapeGroup.shapeWithPath(rect);\n\n        \n        \n\n    //     var fill = shapeGroup.style().addStylePartOfType(0);\n    //     fill.color = MSColor.colorWithRGBADictionary({r: 1, g: 1, b: 1, a: 1});\n        \n    //     shapeGroup.style().contextSettings().setBlendMode(14);\n\n        //var blending = shapeGroup.style().addStylePartOfType(0);\n        //blending.color = MSColor.colorWithRGBADictionary({r: 1, g: 1, b: 1, a: 1});\n        // = Style.BlendingMode.Color;\n\n\n        // var border = shapeGroup.style().addStylePartOfType(1);\n        //     border.color = MSColor.colorWithRed_green_blue_alpha(0.8, 0.8, 0.8, 1.0);\n        //     border.thickness = 3;\n        //     border.position = 1;\n        //context.document.showMessage(context.document.documentData().layerStyles());\n\n\n        //var fill = shapeGroup.style().addStylePartOfType(0);\n        \n        //fill.color = MSColor.colorWithRed_green_blue_alpha(255, 255, 255, 1);\n\n\t\t// context.document.showMessage(\"after color\")\n\n  //       artboard.addLayers([shapeGroup]);\n\n"],"sourceRoot":""}